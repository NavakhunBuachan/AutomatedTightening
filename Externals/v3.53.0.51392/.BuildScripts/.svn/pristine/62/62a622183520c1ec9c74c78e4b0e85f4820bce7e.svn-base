<!--
This file can be imported into any project to add a conditional project reference, 
with the build configuration based on the .NET Framework and platform.

Example usage (update path relative to file containing the Import node):
 <Import Project=".BuildScripts\Import\.Import.StationDashboardMessaging.xml" />

Dependency tree (top-down): FractalSteps - Fractal - FractalStateMachine - StationDashboard.Messaging

Nested Dependencies: MassTransit, MassTransit.RabbitMQ, System.Text.Json

Selection priority:
1. external source code, if '$(ReferenceSourceCode)' == 'true' AND source code exists
2. external binary, if exists. 
   - If $(ReferenceSourceCode), search bottom up; 
   - If not $(ReferenceSourceCode) or not found, search top-down in Externals of project
3. internal NuGet server, hosted at http://osatnugetserver.li.lumentuminc.net/nuget

By using a shared file, all projects are guaranteed to reference the same version,
and if we want to upgrade, only one file needs to be updated.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- Set Imported = true, to use as a condition to prevent multiple nested imports -->
    <ImportedStationDashboardMessaging>true</ImportedStationDashboardMessaging>
    <!-- AutoGenerateBindingRedirects must be true for the StationDashboard Messaging -->
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <!-- Custom property to find the path of the external references for the project -->
    <!-- Default to "unknown" for not found -->
    <PathStationDashboard>unknown</PathStationDashboard>
  </PropertyGroup>
  <Choose>
    <When Condition="'$(ReferenceSourceCode)' == 'true' And (Exists('..\FractalStateMachine') Or Exists('..\Fractal') Or Exists('..\FractalSteps'))">
      <Choose>
        <!-- Search Source Code: Look from bottom to top: FractalStateMachine - Fractal - FractalSteps -->
        <When Condition="Exists('..\FractalStateMachine\Externals\StationDashboard.Messaging')">
          <PropertyGroup>
            <!--Use the binary from the FractalStateMachine project external -->
            <PathStationDashboard>..\FractalStateMachine\Externals\StationDashboard.Messaging\netstandard2.0-$(Platform)</PathStationDashboard>
          </PropertyGroup>
        </When>
        <When Condition="Exists('..\Fractal\Externals\FractalStateMachine')">
          <PropertyGroup>
            <!--Use the binary from the FractalStateMachine project external of the Fractal project-->
            <PathStationDashboard>..\Fractal\Externals\FractalStateMachine\$(BinSubfolder)</PathStationDashboard>
          </PropertyGroup>
        </When>
        <When Condition="Exists('..\FractalSteps\Externals\Fractal')">
          <PropertyGroup>
            <!--Use the binary from the Fractal project external of the FractalSteps project-->
            <PathStationDashboard>..\FractalSteps\Externals\Fractal\$(BinSubfolder)</PathStationDashboard>
          </PropertyGroup>
        </When>
      </Choose>
    </When>
  </Choose>
  <Choose>
    <When Condition="'$(PathStationDashboard)' == 'unknown' And Exists('Externals')">
      <!-- Will get here if either not referencing source code, or the source code above was not found -->
      <!-- Search Binary Externals: Look from top to bottom: FractalSteps - Fractal - FractalStateMachine - StationDashboard.Messaging -->
      <Choose>
        <When Condition="Exists('Externals\FractalSteps')">
          <PropertyGroup>
            <PathStationDashboard>Externals\FractalSteps\$(BinSubfolder)</PathStationDashboard>
          </PropertyGroup>
        </When>
        <When Condition="Exists('Externals\Fractal')">
          <PropertyGroup>
            <PathStationDashboard>Externals\Fractal\$(BinSubfolder)</PathStationDashboard>
          </PropertyGroup>
        </When>
        <When Condition="Exists('Externals\FractalStateMachine')">
          <PropertyGroup>
            <PathStationDashboard>Externals\FractalStateMachine\$(BinSubfolder)</PathStationDashboard>
          </PropertyGroup>
        </When>
        <When Condition="Exists('Externals\StationDashboard.Messaging')">
          <PropertyGroup>
            <PathStationDashboard>Externals\StationDashboard.Messaging\netstandard2.0-$(Platform)</PathStationDashboard>
          </PropertyGroup>
        </When>
      </Choose>
    </When>
  </Choose>
  <!-- Add the external references, if path was found, else try the NuGet package reference -->
  <Choose>
    <When Condition="'$(PathStationDashboard)' == 'unknown'">
      <!-- Not found: use NuGet Package from http://osatnugetserver.li.lumentuminc.net/nuget -->
      <!-- Other package dependencies are included in this package -->
      <ItemGroup>
        <PackageReference Include="StationDashboard.Messaging" Version="1.63.*"/>
      </ItemGroup>
    </When>
    <Otherwise>
      <!-- Reference external path, if applicable. (N/A for project source reference above.) -->
      <ItemGroup Condition="Exists('$(PathStationDashboard)')">
        <Reference Include="StationDashboard.Core">
          <HintPath>$(PathStationDashboard)\StationDashboard.Core.dll</HintPath>
        </Reference>
        <Reference Include="StationDashboard.Messaging">
          <HintPath>$(PathStationDashboard)\StationDashboard.Messaging.dll</HintPath>
        </Reference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <!-- Add other NuGet package references needed by StationDashboard.Messaging -->
  <ItemGroup>
    <PackageReference Include="MassTransit" Version="8.0.1"/>
    <PackageReference Include="MassTransit.RabbitMQ" Version="8.0.1"/>
    <PackageReference Include="System.Text.Json" Version="7.0.1"/>
  </ItemGroup>
</Project>