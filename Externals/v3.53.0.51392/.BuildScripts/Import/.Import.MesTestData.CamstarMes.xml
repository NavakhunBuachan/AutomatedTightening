<!--
This file can be imported into any project to add a conditional project reference, 
with the build configuration based on the .NET Framework and platform.

Example usage (update path relative to file containing the Import node):
	<Import Project=".Import.MesTestData.CamstarMes.xml" Condition="'$(ImportedCamstarMes)' != 'true'"/>
  
Dependency tree: FractalSteps - Fractal - MesTestData.Library - CamstarMes

Nested Dependencies: MesTestData.Interfaces - MesTestData.Models

Selection priority:
1. external source code, if source code exists
2. external binary, if exists. 
   - If $(ReferenceSourceCode), search bottom up; 
   - If not $(ReferenceSourceCode) or not found, search top-down in Externals of project
3. internal NuGet server, hosted at http://osatnugetserver.li.lumentuminc.net/nuget

By using a shared file, all projects are guaranteed to reference the same version, and if we want to upgrade, only one file needs to be updated.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- Set Imported = true, to use as a condition to prevent multiple nested imports -->
    <ImportedCamstarMes>true</ImportedCamstarMes>
    <!-- Custom property to find the path of the external references for the project -->
    <!-- Default to "unknown" for not found -->
    <PathCamstarMes>unknown</PathCamstarMes>
  </PropertyGroup>
  <Choose>
    <When Condition="'$(ReferenceSourceCode)' == 'true'">
      <!-- Search Source Code: Look from bottom to top -->
      <Choose>
        <!-- ReferenceSourceCode: search from bottom up -->
        <When Condition="Exists('..\CamstarMes\CamstarMes.csproj')">
          <ItemGroup>
            <ProjectReference Include="..\CamstarMes\CamstarMes.csproj">
              <Project>{D70B352D-9A53-4C0B-AD7D-2D3B6B99BF8B}</Project>
              <Name>CamstarMes</Name>
            </ProjectReference>
          </ItemGroup>
          <!-- PathCamstarMes N/A when using project reference from source -->
          <PropertyGroup>
            <PathCamstarMes>na</PathCamstarMes>
          </PropertyGroup>
        </When>
        <!-- MesTestData.Library -->
        <When Condition="Exists('..\MesTestData.Library\Externals\CamstarMes')">
          <!-- Use the binary external from the source code of the MesTestData.Library project -->
          <PropertyGroup>
            <PathCamstarMes>..\MesTestData.Library\Externals\CamstarMes</PathCamstarMes>
          </PropertyGroup>
        </When>
        <!-- Fractal -->
        <When Condition="Exists('..\Fractal\Externals\MesTestData.Library')">
          <PropertyGroup>
            <!--Use the binary from the MesTestData.Library external of the Fractal project source -->
            <PathCamstarMes>..\Fractal\Externals\MesTestData.Library</PathCamstarMes>
          </PropertyGroup>
        </When>
        <!-- FractalSteps -->
        <When Condition="Exists('..\FractalSteps\Externals\Fractal')">
          <PropertyGroup>
            <!--Use the binary from the Fractal external of the FractalSteps project source -->
            <PathCamstarMes>..\FractalSteps\Externals\Fractal</PathCamstarMes>
          </PropertyGroup>
        </When>
      </Choose>
    </When>
  </Choose>
  <!-- If path not found above, search External subfolders of project -->
  <Choose>
    <When Condition="'$(PathCamstarMes)' == 'unknown' And Exists('Externals')">
      <!-- Will get here if either not referencing source code, or the source code above was not found -->
      <!-- Look from top to bottom: FractalSteps - Fractal - MesTestData.Library - CamstarMes -->
      <Choose>
        <When Condition="Exists('Externals\FractalSteps')">
          <PropertyGroup>
            <PathCamstarMes>Externals\FractalSteps</PathCamstarMes>
          </PropertyGroup>
        </When>
        <When Condition="Exists('Externals\Fractal')">
          <PropertyGroup>
            <PathCamstarMes>Externals\Fractal</PathCamstarMes>
          </PropertyGroup>
        </When>
        <When Condition="Exists('Externals\MesTestData.Library')">
          <PropertyGroup>
            <PathCamstarMes>Externals\MesTestData.Library</PathCamstarMes>
          </PropertyGroup>
        </When>
        <When Condition="Exists('Externals\MesTestData.CamstarMes')">
          <PropertyGroup>
            <PathCamstarMes>Externals\MesTestData.CamstarMes</PathCamstarMes>
          </PropertyGroup>
        </When>
      </Choose>
    </When>
  </Choose>
  <!-- Add the external references, if path was found, else try the NuGet package reference -->
  <Choose>
    <When Condition="'$(PathCamstarMes)' == 'unknown'">
      <!-- Not found: use NuGet Package from http://osatnugetserver.li.lumentuminc.net/nuget -->
      <ItemGroup>
        <PackageReference Include="CamstarMes" Version="1.1.*"/>
      </ItemGroup>
      <!-- Nested dependencies are included in the NuGet package -->
    </When>
    <Otherwise>
      <!-- Reference external path, if applicable. (N/A for project source reference above.) -->
      <ItemGroup Condition="Exists('$(PathCamstarMes)')">
        <Reference Include="CamstarMes">
          <HintPath>$(PathCamstarMes)\$(BinSubfolder)\CamstarMes.dll</HintPath>
        </Reference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ImportGroup Condition="'$(PathCamstarMes)' != 'unknown'">
    <!-- Import nested dependencies -->
    <Import Project=".Import.MesTestData.Interfaces.xml" Condition="'$(ImportedMesTestDataInterfaces)' != 'true'"/>
  </ImportGroup>
</Project>
