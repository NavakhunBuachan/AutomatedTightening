<!--
This file can be imported into any project to add a conditional project reference, 
with the build configuration based on the .NET Framework and platform.

Example usage (update path relative to file containing the Import node):
 <Import Project=".BuildScripts\Import\.Import.ApplicationBase.xml" Condition="'$(ImportedApplicationBase)' != 'true'"/>

Dependency tree (top-down): FractalSteps - Fractal - FACE - ApplicationBase

Nested Dependencies: FractalControlLibrary

Selection priority:
1. external source code, if '$(ReferenceSourceCode)' == 'true' AND source code exists
2. external binary, if exists. 
   - If $(ReferenceSourceCode), search bottom up; 
   - If not $(ReferenceSourceCode) or not found, search top-down in Externals of project
3. (TODO) internal NuGet server, hosted at http://osatnugetserver.li.lumentuminc.net/nuget 

By using a shared file, all projects are guaranteed to reference the same version,
and if we want to upgrade, only one file needs to be updated.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
    <!-- Set Imported = true, to use as a condition to prevent multiple nested imports -->
    <ImportedApplicationBase>true</ImportedApplicationBase>
	</PropertyGroup>
	<!--ApplicationBase is referenced through FACE, which is referenced by Fractal, then FractalSteps -->
	<Choose>
		<!--Note:  If more than one When element evaluates to true, only the first one is used -->
		<When Condition="'$(ReferenceSourceCode)' == 'true' And Exists('..\ApplicationBase\ApplicationBase.vbproj')">
			<ItemGroup>
				<!--Use the project source code -->
				<ProjectReference Include="..\ApplicationBase\ApplicationBase.vbproj">
					<Project>{2FF50967-4CCF-4CBD-9549-CD4DEA641411}</Project>
					<Name>ApplicationBase</Name>
				</ProjectReference>
			</ItemGroup>
		</When>
		<When Condition="'$(ReferenceSourceCode)' == 'true' And Exists('..\FACE')">
			<ItemGroup>
				<!--Use the binary from the FACE project external -->
				<Reference Include="ApplicationBase">
					<HintPath>..\FACE\Externals\ApplicationBase\$(BinSubfolder)\ApplicationBase.dll</HintPath>
				</Reference>
			</ItemGroup>
		</When>
		<When Condition="'$(ReferenceSourceCode)' == 'true' And Exists('..\Fractal')">
			<ItemGroup>
				<!--Use the binary from the FACE external of the Fractal project -->
				<Reference Include="ApplicationBase">
					<HintPath>..\Fractal\Externals\Face\$(BinSubfolder)\ApplicationBase.dll</HintPath>
				</Reference>
			</ItemGroup>
		</When>
		<When Condition="'$(ReferenceSourceCode)' == 'true' And Exists('..\FractalSteps')">
			<ItemGroup>
				<!--Use the binary from the Fractal external of the FractalSteps project -->
				<Reference Include="ApplicationBase">
					<HintPath>..\FractalSteps\Externals\Fractal\$(BinSubfolder)\ApplicationBase.dll</HintPath>
				</Reference>
			</ItemGroup>
		</When>
		<When Condition="Exists('Externals\FractalSteps\')">
			<ItemGroup>
				<!--Use the binary from the FractalSteps external of the project -->
				<Reference Include="ApplicationBase">
					<HintPath>Externals\FractalSteps\$(BinSubfolder)\ApplicationBase.dll</HintPath>
				</Reference>
			</ItemGroup>
		</When>
		<When Condition="Exists('Externals\Fractal\')">
			<ItemGroup>
				<!--Use the binary from the Fractal external of the project -->
				<Reference Include="ApplicationBase">
					<HintPath>Externals\Fractal\$(BinSubfolder)\ApplicationBase.dll</HintPath>
				</Reference>
			</ItemGroup>
		</When>
		<When Condition="Exists('Externals\Face\')">
			<ItemGroup>
				<!--Use the binary from the FACE external of the project -->
				<Reference Include="ApplicationBase">
					<HintPath>Externals\Face\$(BinSubfolder)\ApplicationBase.dll</HintPath>
				</Reference>
			</ItemGroup>
		</When>
		<Otherwise>
			<ItemGroup>
				<!--Use the binary from the ApplicationBase External -->
				<Reference Include="ApplicationBase">
					<HintPath>Externals\ApplicationBase\$(BinSubfolder)\ApplicationBase.dll</HintPath>
				</Reference>
			</ItemGroup>
		</Otherwise>
	</Choose>
	<!-- Import nested dependencies, if not already imported -->
	<Import Project=".Import.FractalControlLibrary.xml" Condition="'$(ImportedFractalControlLibrary)' != 'true'"/>
</Project>