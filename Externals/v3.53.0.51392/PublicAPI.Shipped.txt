Const UdbsInterface.TestDataInterface.InterfaceSupport.INCOMPLETE = 1000 -> Integer
Const UdbsInterface.TestDataInterface.InterfaceSupport.PROCESS = "testdata" -> String
MustOverride UdbsInterface.MasterInterface.AsynchronousQueue(Of T).Start() -> Void
MustOverride UdbsInterface.MasterInterface.OsAbstractionLayer.IsProcessStillRunning(CustomProcessID As String) -> Boolean
MustOverride UdbsInterface.MasterInterface.OsAbstractionLayer.RegistryAdapter() -> UdbsInterface.MasterInterface.IRegistryAdapter
MustOverride UdbsInterface.MasterInterface.OsAbstractionLayer.RegistryAdapter(Value As UdbsInterface.MasterInterface.IRegistryAdapter) -> Void
Overridable UdbsInterface.MasterInterface.AsynchronousQueue(Of T).Add(anEntry As T) -> Void
Overridable UdbsInterface.MasterInterface.AsynchronousQueue(Of T).GetRetryDelay(retryCount As Integer) -> Integer
Overridable UdbsInterface.MasterInterface.CProcessInstance.AddProcessInstanceNote(ProcessNote As String) -> UdbsInterface.MasterInterface.ReturnCodes
Overridable UdbsInterface.MasterInterface.CProcessInstance.DBEnumType.DBEnums() -> System.Collections.Generic.IEnumerable(Of UdbsInterface.MasterInterface.CProcessInstance.DBEnum)
Overridable UdbsInterface.MasterInterface.CProcessInstance.DBEnumType.DBEnums(AutoPropertyValue As System.Collections.Generic.IEnumerable(Of UdbsInterface.MasterInterface.CProcessInstance.DBEnum)) -> Void
Overridable UdbsInterface.MasterInterface.CProcessInstance.DebugMessage(ex As System.Exception) -> Void
Overridable UdbsInterface.MasterInterface.CProcessInstance.Dispose(disposing As Boolean) -> Void
Overridable UdbsInterface.MasterInterface.CProcessInstance.LoadProcessInstanceByUnit(ProcessStage As String, ProductNumber As String, SerialNumber As String, Sequence As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
Overridable UdbsInterface.MasterInterface.CProcessInstance.RestartProcessID(ProcessID As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
Overridable UdbsInterface.MasterInterface.CProduct.DebugMessage(ex As System.Exception) -> Void
Overridable UdbsInterface.MasterInterface.CProduct.Dispose(disposing As Boolean) -> Void
Overridable UdbsInterface.MasterInterface.CUtility.Dispose(disposing As Boolean) -> Void
Overridable UdbsInterface.TestDataInterface.CTestData_ItemList.DebugMessage(ex As System.Exception) -> Void
Overridable UdbsInterface.TestDataInterface.CTestData_ItemList.Dispose(disposing As Boolean) -> Void
Overridable UdbsInterface.WipInterface.CWIP_ItemList.Dispose(disposing As Boolean) -> Void
Overridable UdbsInterface.WipInterface.CWIP_Process.Dispose(disposing As Boolean) -> Void
Overridable UdbsInterface.WipInterface.CWIP_Unit.Dispose(disposing As Boolean) -> Void
Overridable UdbsInterface.WipInterface.CWIP_Utility.Dispose(disposing As Boolean) -> Void
Overrides UdbsInterface.MasterInterface.ErrorQueue.Add(toAdd As UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry) -> Void
Overrides UdbsInterface.MasterInterface.ErrorQueue.GetRetryDelay(retryCount As Integer) -> Integer
Overrides UdbsInterface.MasterInterface.ErrorQueue.Start() -> Void
Shared UdbsInterface.KittingInterface.KittingUtility.GetHighestKittingItemlistRevision(serialNumber As String) -> Integer
Shared UdbsInterface.KittingInterface.KittingUtility.LookupKittingInfo(serialNumber As String, kittingItemname As String, ByRef kittingItemSN As String, ByRef kittingItemPartNumber As String, ByRef kittingItemPartID As String, ByRef kittingSequence As Integer) -> Boolean
Shared UdbsInterface.KittingInterface.KittingUtility.LookupKittingInfo(serialNumber As String, kittingItemname As String, ByRef kittingItemSN As String, ByRef kittingItemPartNumber As String, ByRef kittingItemPartID As String, ByRef kittingSequence As Integer, ByRef kittingRemarks As String) -> Boolean
Shared UdbsInterface.KittingInterface.KittingUtility.UpdateKittingData(udbsID As String, serialNo As String, empID As String, itemname As String(), componentPN As String(), componentSN As String(), notes As String = "") -> Boolean
Shared UdbsInterface.LocalDBIntegrityChecker.Check(processId As String) -> UdbsInterface.LocalDBIntegrityStatus
Shared UdbsInterface.LocalDBIntegrityChecker.DiscardLocalDB(destinationFolderPath As String, filePrefix As String) -> Void
Shared UdbsInterface.MasterInterface.CProduct.LookupDefaultPartNo(unitID As String) -> String
Shared UdbsInterface.MasterInterface.CUtility.ConvertThaiToCommonEra(toConvert As Date) -> Date
Shared UdbsInterface.MasterInterface.CUtility.DebugMessage(ex As System.Exception) -> Void
Shared UdbsInterface.MasterInterface.CUtility.Utility_GetStationName(ByRef StationName As String) -> UdbsInterface.MasterInterface.ReturnCodes
Shared UdbsInterface.MasterInterface.OsAbstractionLayer.Instance() -> UdbsInterface.MasterInterface.IOsAbstractionLayer
Shared UdbsInterface.TestDataInterface.CTestData_Utility.GetStationName(ByRef StationName As String) -> UdbsInterface.MasterInterface.ReturnCodes
Shared UdbsInterface.UdbsTools.ErrorLogLevel() -> NLog.LogLevel
Shared UdbsInterface.UdbsTools.ErrorLogLevel(AutoPropertyValue As NLog.LogLevel) -> Void
Shared UdbsInterface.UdbsTools.InterpretResultCode(udbsCode As UdbsInterface.TestDataInterface.ResultCodes, dataItem As UdbsInterface.TestDataInterface.CTestData_Item = Nothing) -> String
Shared UdbsInterface.UdbsTools.InterpretUDBSReturnCode(udbsCode As UdbsInterface.MasterInterface.ReturnCodes) -> String
UdbsInterface.KittingInterface.KittingUtility
UdbsInterface.KittingInterface.KittingUtility.New() -> Void
UdbsInterface.LocalDBIntegrityChecker
UdbsInterface.LocalDBIntegrityChecker.New() -> Void
UdbsInterface.LocalDBIntegrityStatus
UdbsInterface.LocalDBIntegrityStatus.ErrorCheckingIntegrity = 16 -> UdbsInterface.LocalDBIntegrityStatus
UdbsInterface.LocalDBIntegrityStatus.Good = 0 -> UdbsInterface.LocalDBIntegrityStatus
UdbsInterface.LocalDBIntegrityStatus.ProcessIdDoesNotExist = 1 -> UdbsInterface.LocalDBIntegrityStatus
UdbsInterface.LocalDBIntegrityStatus.TestDataProcessDoesNotExist = 2 -> UdbsInterface.LocalDBIntegrityStatus
UdbsInterface.LocalDBIntegrityStatus.TestDataResultNotPresent = 8 -> UdbsInterface.LocalDBIntegrityStatus
UdbsInterface.LocalDBIntegrityStatus.TestDataResultValueMissing = 4 -> UdbsInterface.LocalDBIntegrityStatus
UdbsInterface.MasterInterface.AsynchronousQueue(Of T)
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).CanAdd() -> Boolean
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).Clear() -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).Count() -> Integer
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).DequeueMethod
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).Dispose() -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).HandledEntry(Of T)
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).HandledEntry(Of T).Entry() -> T
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).HandledEntry(Of T).Entry(AutoPropertyValue As T) -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).HandledEntry(Of T).New() -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).HandledEntry(Of T).TimeWhenItWasProcessed() -> Date
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).HandledEntry(Of T).TimeWhenItWasProcessed(AutoPropertyValue As Date) -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).IsCalledOnDequeueThread() -> Boolean
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).IsRunning() -> Boolean
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).Join() -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).MaxSize() -> Integer
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).MaxSize(AutoPropertyValue As Integer) -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).New() -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).RequestStop() -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).Start(myDequeueMethod As System.Func(Of T, Boolean)) -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).ThrottlingWindowPeriod() -> Integer
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).ThrottlingWindowPeriod(AutoPropertyValue As Integer) -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).ThrottlingWindowSize() -> Integer
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).ThrottlingWindowSize(AutoPropertyValue As Integer) -> Void
UdbsInterface.MasterInterface.AsynchronousQueue(Of T).WaitForQueueToBeEmpty() -> Void
UdbsInterface.MasterInterface.CProcessInstance
UdbsInterface.MasterInterface.CProcessInstance.ActiveDuration() -> Double
UdbsInterface.MasterInterface.CProcessInstance.DBEnum
UdbsInterface.MasterInterface.CProcessInstance.DBEnum.ID() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.DBEnum.ID(AutoPropertyValue As Integer) -> Void
UdbsInterface.MasterInterface.CProcessInstance.DBEnum.Name() -> String
UdbsInterface.MasterInterface.CProcessInstance.DBEnum.Name(AutoPropertyValue As String) -> Void
UdbsInterface.MasterInterface.CProcessInstance.DBEnum.New() -> Void
UdbsInterface.MasterInterface.CProcessInstance.DBEnumType
UdbsInterface.MasterInterface.CProcessInstance.DBEnumType.ID() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.DBEnumType.ID(AutoPropertyValue As Integer) -> Void
UdbsInterface.MasterInterface.CProcessInstance.DBEnumType.Immutable() -> Boolean
UdbsInterface.MasterInterface.CProcessInstance.DBEnumType.Immutable(AutoPropertyValue As Boolean) -> Void
UdbsInterface.MasterInterface.CProcessInstance.DBEnumType.Name() -> String
UdbsInterface.MasterInterface.CProcessInstance.DBEnumType.Name(AutoPropertyValue As String) -> Void
UdbsInterface.MasterInterface.CProcessInstance.DBEnumType.New() -> Void
UdbsInterface.MasterInterface.CProcessInstance.DeleteLocalProcess() -> Void
UdbsInterface.MasterInterface.CProcessInstance.Dispose() -> Void
UdbsInterface.MasterInterface.CProcessInstance.EmployeeNumber() -> String
UdbsInterface.MasterInterface.CProcessInstance.EnumLookup() -> System.Collections.Generic.IEnumerable(Of UdbsInterface.MasterInterface.CProcessInstance.DBEnumType)
UdbsInterface.MasterInterface.CProcessInstance.GetProcessInstanceAttribute(Of TValue, TStringData)(attributeName As String, ByRef value As TValue, ByRef stringData As TStringData) -> Void
UdbsInterface.MasterInterface.CProcessInstance.GetStationName() -> String
UdbsInterface.MasterInterface.CProcessInstance.ID() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.IsReadOnly() -> Boolean
UdbsInterface.MasterInterface.CProcessInstance.ItemListCreatedBy() -> String
UdbsInterface.MasterInterface.CProcessInstance.ItemListCreatedDate() -> Date
UdbsInterface.MasterInterface.CProcessInstance.ItemListRevID() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.mProcessID -> Integer
UdbsInterface.MasterInterface.CProcessInstance.mREADONLY -> Boolean
UdbsInterface.MasterInterface.CProcessInstance.New(ProcessName As String) -> Void
UdbsInterface.MasterInterface.CProcessInstance.Notes() -> String
UdbsInterface.MasterInterface.CProcessInstance.overwritten_by() -> String
UdbsInterface.MasterInterface.CProcessInstance.overwritten_date() -> Date
UdbsInterface.MasterInterface.CProcessInstance.overwritten_result() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.Process() -> String
UdbsInterface.MasterInterface.CProcessInstance.ProcessInstanceRunning() -> Boolean
UdbsInterface.MasterInterface.CProcessInstance.ProductCreatedBy() -> String
UdbsInterface.MasterInterface.CProcessInstance.ProductCreatedDate() -> Date
UdbsInterface.MasterInterface.CProcessInstance.ProductDescription() -> String
UdbsInterface.MasterInterface.CProcessInstance.ProductDescriptor() -> String
UdbsInterface.MasterInterface.CProcessInstance.ProductFamily() -> String
UdbsInterface.MasterInterface.CProcessInstance.ProductNumber() -> String
UdbsInterface.MasterInterface.CProcessInstance.ProductRelease() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.ProductReleaseReason() -> String
UdbsInterface.MasterInterface.CProcessInstance.ProductSNLastUnit() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.ProductSNProdCode() -> String
UdbsInterface.MasterInterface.CProcessInstance.ProductSNTemplate() -> String
UdbsInterface.MasterInterface.CProcessInstance.RestartUnit(ProcessStage As String, ProductNumber As String, SerialNumber As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProcessInstance.result() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.Revision() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.RevisionDescription() -> String
UdbsInterface.MasterInterface.CProcessInstance.Sequence() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.Stage() -> String
UdbsInterface.MasterInterface.CProcessInstance.StartDate() -> Date
UdbsInterface.MasterInterface.CProcessInstance.StartProcessInstance(productNumber As String, SerialNumber As String, ProcessStage As String, ByRef ItemListRevision As Integer, ByRef ProcessID As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProcessInstance.StationName() -> String
UdbsInterface.MasterInterface.CProcessInstance.Status() -> String
UdbsInterface.MasterInterface.CProcessInstance.StopDate() -> Date
UdbsInterface.MasterInterface.CProcessInstance.StopProcessInstance() -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProcessInstance.StoreProcessInstanceAttribute(attributeName As String, attributeNumericValue As Double, attributeStringValue As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProcessInstance.TotalDuration() -> Double
UdbsInterface.MasterInterface.CProcessInstance.PauseProcessInstance() -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProcessInstance.Synchronize() -> Void
UdbsInterface.MasterInterface.CProcessInstance.TerminateWithoutSynchronizing() -> Void
UdbsInterface.MasterInterface.CProcessInstance.UnitCataloguePN() -> String
UdbsInterface.MasterInterface.CProcessInstance.UnitCreatedBy() -> String
UdbsInterface.MasterInterface.CProcessInstance.UnitCreatedDate() -> Date
UdbsInterface.MasterInterface.CProcessInstance.UnitNumLabels() -> Integer
UdbsInterface.MasterInterface.CProcessInstance.UnitOraclePN() -> String
UdbsInterface.MasterInterface.CProcessInstance.UnitReport() -> String
UdbsInterface.MasterInterface.CProcessInstance.UnitSerialNumber() -> String
UdbsInterface.MasterInterface.CProcessInstance.UnitVariance() -> String
UdbsInterface.MasterInterface.CProcessInstance._Process -> String
UdbsInterface.MasterInterface.CProduct
UdbsInterface.MasterInterface.CProduct.AddSNwVar(SerialNumber As String, OPN As String, EmployeeNumber As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProduct.CreatedBy() -> String
UdbsInterface.MasterInterface.CProduct.CreatedDate() -> Date
UdbsInterface.MasterInterface.CProduct.Description() -> String
UdbsInterface.MasterInterface.CProduct.Descriptor() -> String
UdbsInterface.MasterInterface.CProduct.Dispose() -> Void
UdbsInterface.MasterInterface.CProduct.Family() -> String
UdbsInterface.MasterInterface.CProduct.GetProduct(ProductNumber As String, ProductRelease As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProduct.GetProductByID(ProductID As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProduct.GetUnit(ProductNumber As String, SerialNumber As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProduct.LookupAllPartNumbers(udbsProductId As String) -> System.Collections.Generic.List(Of String)
UdbsInterface.MasterInterface.CProduct.New() -> Void
UdbsInterface.MasterInterface.CProduct.Number() -> String
UdbsInterface.MasterInterface.CProduct.ProductID() -> Integer
UdbsInterface.MasterInterface.CProduct.Release() -> Integer
UdbsInterface.MasterInterface.CProduct.ReleaseReason() -> String
UdbsInterface.MasterInterface.CProduct.SNLastUnit() -> Integer
UdbsInterface.MasterInterface.CProduct.SNProdCode() -> String
UdbsInterface.MasterInterface.CProduct.SNTemplate() -> String
UdbsInterface.MasterInterface.CProduct.UnitExists(SerialNumber As String) -> Boolean
UdbsInterface.MasterInterface.CsvFile
UdbsInterface.MasterInterface.CsvFile.OpenCsvFile(path As String) -> Microsoft.VisualBasic.FileIO.TextFieldParser
UdbsInterface.MasterInterface.CUtility
UdbsInterface.MasterInterface.CUtility.Dispose() -> Void
UdbsInterface.MasterInterface.CUtility.New() -> Void
UdbsInterface.MasterInterface.CUtility.Product_GetPartIdentifier(OraclePN As String, ByRef PartIdentifier As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CUtility.Product_GetUnitVariance(ProductNumber As String, SerialNumber As String, ByRef OraclePN As String, ByRef CataloguePN As String, ByRef Variance As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CUtility.UpdateInstrumentAttrs(TestDataProcessID As String, StationName As String, InstrAttrs As System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.Dictionary(Of String, String))) -> Void
UdbsInterface.MasterInterface.DatabaseSupport
UdbsInterface.MasterInterface.DatabaseSupport.CreateNetworkSqlConnection() -> System.Data.SqlClient.SqlConnection
UdbsInterface.MasterInterface.DatabaseSupport.InitializeNetworkDB() -> Void
UdbsInterface.MasterInterface.DatabaseSupport.InitializeNetworkDB(odbcConnectionString As String) -> Void
UdbsInterface.MasterInterface.DatabaseSupport.SetNetworkConnectionString(ConnStr As String, SaveToRegistry As Boolean = True) -> Void
UdbsInterface.MasterInterface.DatabaseSupport.UDBSDebugMode -> Boolean
UdbsInterface.MasterInterface.ErrorQueue
UdbsInterface.MasterInterface.ErrorQueue.DeleteSynchronizedErrorLogFile() -> Boolean
UdbsInterface.MasterInterface.ErrorQueue.DeleteSynchronizedErrorLogFile(AutoPropertyValue As Boolean) -> Void
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.AssemblyVersion() -> String
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.AssemblyVersion(AutoPropertyValue As String) -> Void
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.Description() -> String
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.Description(AutoPropertyValue As String) -> Void
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.FunctionName() -> String
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.FunctionName(AutoPropertyValue As String) -> Void
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.Guid() -> String
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.Guid(AutoPropertyValue As String) -> Void
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.New() -> Void
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.PcDisplayName() -> String
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.PcDisplayName(AutoPropertyValue As String) -> Void
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.StackTrace() -> String
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.StackTrace(AutoPropertyValue As String) -> Void
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.TimeOfEvent() -> Date
UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry.TimeOfEvent(AutoPropertyValue As Date) -> Void
UdbsInterface.MasterInterface.ErrorQueue.LoadFromFile(path As String = Nothing) -> Void
UdbsInterface.MasterInterface.ErrorQueue.LogErrorToCsv(entryToLog As UdbsInterface.MasterInterface.ErrorQueue.ErrorEntry) -> Void
UdbsInterface.MasterInterface.ErrorQueue.New() -> Void
UdbsInterface.MasterInterface.ErrorQueue.TemporaryErrorLogFile() -> String
UdbsInterface.MasterInterface.ErrorQueue.TemporaryErrorLogFile(value As String) -> Void
UdbsInterface.MasterInterface.IOsAbstractionLayer
UdbsInterface.MasterInterface.IOsAbstractionLayer.IsProcessStillRunning(CustomProcessID As String) -> Boolean
UdbsInterface.MasterInterface.IOsAbstractionLayer.RegistryAdapter() -> UdbsInterface.MasterInterface.IRegistryAdapter
UdbsInterface.MasterInterface.IRegistryAdapter
UdbsInterface.MasterInterface.IRegistryAdapter.GetSetting(applicationName As String, sectionName As String, key As String, defaultValue As String = "") -> String
UdbsInterface.MasterInterface.IRegistryAdapter.SaveSetting(applicationName As String, sectionName As String, key As String, value As String) -> Void
UdbsInterface.MasterInterface.OsAbstractionLayer
UdbsInterface.MasterInterface.OsAbstractionLayer.New() -> Void
UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.ReturnCodes.UDBS_ERROR = -1000000 -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.ReturnCodes.UDBS_LOCALDB_MISSING = -2147467259 -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.ReturnCodes.UDBS_OP_FAIL = -1 -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.ReturnCodes.UDBS_OP_INC = 0 -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.ReturnCodes.UDBS_OP_SUCCESS = 1 -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.ReturnCodes.UDBS_RECORD_EXISTS = -2147217900 -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.ReturnCodes.UDBS_TABLE_MISSING = -2147217865 -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.SecurityInterface
UdbsInterface.SecurityInterface.AddEmployee(EmployeeNumber As String, EmployeeName As String, Password As String, PasswordHint As String, ByRef ErrorMessage As String) -> Boolean
UdbsInterface.SecurityInterface.AddGroup(GroupName As String, ByRef ErrorMessage As String) -> Boolean
UdbsInterface.SecurityInterface.AuthenticatedEmployeeNumber() -> String
UdbsInterface.SecurityInterface.DeleteEmployee(EmployeeNumber As String, ByRef ErrorMessage As String) -> Boolean
UdbsInterface.SecurityInterface.EditEmployeeAddGroups(EmployeeNumber As String, GroupNames As String(), ByRef ErrorMessage As String) -> Boolean
UdbsInterface.SecurityInterface.EditEmployeeRemoveGroups(EmployeeNumber As String, GroupNames As String(), ByRef ErrorMessage As String) -> Boolean
UdbsInterface.SecurityInterface.EditGroupAddEmployees(GroupName As String, EmployeeNumbers As String(), ByRef ErrorMessage As String) -> Boolean
UdbsInterface.SecurityInterface.EditGroupRemoveEmployees(GroupName As String, EmployeeNumbers As String(), ByRef ErrorMessage As String) -> Boolean
UdbsInterface.SecurityInterface.GetGroupMembership(EmployeeNumber As String, ByRef Groups As String()) -> Boolean
UdbsInterface.SecurityInterface.IsGroupMember(EmployeeNumber As String, GroupName As String) -> Boolean
UdbsInterface.SecurityInterface.LogIn(UseGUI As Boolean, EmployeeNumber As String = Nothing, Password As String = Nothing) -> Boolean
UdbsInterface.SecurityInterface.New() -> Void
UdbsInterface.SecurityInterface.VerifyPassword(EmployeeNumber As String, Password As String) -> Boolean
UdbsInterface.TestDataInterface.CTestdata_Instance
UdbsInterface.TestDataInterface.CTestdata_Instance.AddNote(Note As String) -> UdbsInterface.MasterInterface.ReturnCodes
Overrides UdbsInterface.TestDataInterface.CTestdata_Instance.AddProcessInstanceNote(ProcessNote As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestdata_Instance.ClearResults(groupName As String) -> UdbsInterface.MasterInterface.ReturnCodes
Overrides UdbsInterface.TestDataInterface.CTestdata_Instance.Dispose(disposing As Boolean) -> Void
Overridable UdbsInterface.TestDataInterface.CTestdata_Instance.EvaluateDevice() -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.CTestdata_Instance.EvaluateGroup(GroupName As String) -> UdbsInterface.TestDataInterface.ResultCodes
Overridable UdbsInterface.TestDataInterface.CTestdata_Instance.Finish() -> UdbsInterface.MasterInterface.ReturnCodes
Overridable UdbsInterface.TestDataInterface.CTestdata_Instance.Finish(storeBlobSummaryInfo As Boolean) -> UdbsInterface.MasterInterface.ReturnCodes
Overrides UdbsInterface.TestDataInterface.CTestdata_Instance.LoadProcessInstanceByUnit(Stage As String, ProductNumber As String, SerialNumber As String, Sequence As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestdata_Instance.Pause() -> UdbsInterface.MasterInterface.ReturnCodes
Overridable UdbsInterface.TestDataInterface.CTestdata_Instance.StoreStringData(ResultName As String, StringData As String) -> UdbsInterface.MasterInterface.ReturnCodes
Overridable UdbsInterface.TestDataInterface.CTestdata_Instance.StoreValue(ResultName As String, ResultValue As Double) -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.CTestdata_Instance.GetItemsInGroup(groupName As String, ByRef items As String()) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestdata_Instance.LoadExisting(Stage As String, ProductNumber As String, SerialNumber As String, ByRef Sequence As Integer, ConnectionString As String = "") -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestdata_Instance.New() -> Void
Overloads UdbsInterface.TestDataInterface.CTestdata_Instance.RestartUnit(ProductNumber As String, SerialNumber As String, ProcessStage As String) -> UdbsInterface.MasterInterface.ReturnCodes
Overrides UdbsInterface.TestDataInterface.CTestdata_Instance.RestartProcessID(ProcessID As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestdata_Instance.Results() -> System.Collections.Generic.Dictionary(Of String, UdbsInterface.TestDataInterface.CTestData_Result)
UdbsInterface.TestDataInterface.CTestdata_Instance.Results(item As String) -> UdbsInterface.TestDataInterface.CTestData_Result
UdbsInterface.TestDataInterface.CTestdata_Instance.Start(ProductNumber As String, SerialNumber As String, ProcessStage As String, StageRevision As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestdata_Instance.StoreProcessData(ProcessItem As String, ItemData As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestdata_Instance.StoreResultFlag(ResultName As String, ResultFlag As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestData_Item
UdbsInterface.TestDataInterface.CTestData_Item.CriticalSpec() -> Integer
UdbsInterface.TestDataInterface.CTestData_Item.Description() -> String
UdbsInterface.TestDataInterface.CTestData_Item.Descriptor() -> String
UdbsInterface.TestDataInterface.CTestData_Item.FailMax() -> Double
UdbsInterface.TestDataInterface.CTestData_Item.FailMaxSpec() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Item.FailMin() -> Double
UdbsInterface.TestDataInterface.CTestData_Item.FailMinSpec() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Item.HasSpecs() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Item.IsGroup() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Item.IsGroup(Value As Boolean) -> Void
UdbsInterface.TestDataInterface.CTestData_Item.ItemBlobDataExists() -> Integer
UdbsInterface.TestDataInterface.CTestData_Item.ItemName() -> String
UdbsInterface.TestDataInterface.CTestData_Item.ItemNumber() -> Integer
UdbsInterface.TestDataInterface.CTestData_Item.ReportLevel() -> Integer
UdbsInterface.TestDataInterface.CTestData_Item.SanityMax() -> Double
UdbsInterface.TestDataInterface.CTestData_Item.SanityMaxSpec() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Item.SanityMin() -> Double
UdbsInterface.TestDataInterface.CTestData_Item.SanityMinSpec() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Item.Units() -> String
UdbsInterface.TestDataInterface.CTestData_Item.WarningMax() -> Double
UdbsInterface.TestDataInterface.CTestData_Item.WarningMaxSpec() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Item.WarningMin() -> Double
UdbsInterface.TestDataInterface.CTestData_Item.WarningMinSpec() -> Boolean
UdbsInterface.TestDataInterface.CTestData_ItemList
UdbsInterface.TestDataInterface.CTestData_ItemList.BlobDataExists() -> Integer
UdbsInterface.TestDataInterface.CTestData_ItemList.CreatedDate() -> Date
UdbsInterface.TestDataInterface.CTestData_ItemList.Dispose() -> Void
UdbsInterface.TestDataInterface.CTestData_ItemList.EmployeeNumber() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.GetItemName(ItemNumber As Integer) -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.ItemListRevID() -> Integer
UdbsInterface.TestDataInterface.CTestData_ItemList.Items() -> System.Collections.Generic.Dictionary(Of String, UdbsInterface.TestDataInterface.CTestData_Item)
UdbsInterface.TestDataInterface.CTestData_ItemList.LoadItemList(ProductNumber As String, ProductRelease As Double, Stage As String, ByRef Revision As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestData_ItemList.New() -> Void
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductCreatedBy() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductCreatedDate() -> Date
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductDescription() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductDescriptor() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductFamily() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductID() -> Integer
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductNumber() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductRelease() -> Double
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductReleaseReason() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductSNLastUnit() -> Integer
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductSNProdCode() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.ProductSNTemplate() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.Revision() -> Integer
UdbsInterface.TestDataInterface.CTestData_ItemList.RevisionDescription() -> String
UdbsInterface.TestDataInterface.CTestData_ItemList.Stage() -> String
UdbsInterface.TestDataInterface.CTestData_Result
UdbsInterface.TestDataInterface.CTestData_Result.CheckValue(ResultValue As Double) -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.CTestData_Result.Dispose() -> Void
UdbsInterface.TestDataInterface.CTestData_Result.GetArray(arrayName As String, ByRef DataGroupName As String, ByRef NumElements As Integer, ByRef DataType As Microsoft.VisualBasic.VariantType, ByRef IsHeader As Boolean, ByRef ArrayData As System.Array) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestData_Result.GetAttachmentList(ByRef ArrayNames As String(), ByRef ArrayDataType As Integer()) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestData_Result.GetFile(arrayName As String, ByRef DataGroupName As String, ByRef IsHeader As Boolean, FileSpec As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestData_Result.PassFlag() -> Integer
UdbsInterface.TestDataInterface.CTestData_Result.PassFlag(Value As Integer) -> Void
UdbsInterface.TestDataInterface.CTestData_Result.PassFlagStored() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Result.PassFlagStored(Value As Boolean) -> Void
UdbsInterface.TestDataInterface.CTestData_Result.ResultBlobDataExists() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Result.ResultBlobDataExists(AutoPropertyValue As Boolean) -> Void
UdbsInterface.TestDataInterface.CTestData_Result.ResultStored() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Result.ResultStored(Value As Boolean) -> Void
UdbsInterface.TestDataInterface.CTestData_Result.StoreArray(arrayName As String, dataGroupName As String, isHeader As Boolean, arrayData As System.Array, lowBound As Integer, upBound As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestData_Result.StoreField(FieldName As String, FieldValue As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestData_Result.StoreFile(fileName As String, dataGroupName As String, isHeader As Boolean, filePath As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestData_Result.StoreValue(MeasuredValue As Double) -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.CTestData_Result.StringData() -> String
UdbsInterface.TestDataInterface.CTestData_Result.StringData(Value As String) -> Void
UdbsInterface.TestDataInterface.CTestData_Result.Value() -> Double
UdbsInterface.TestDataInterface.CTestData_Result.Value(tmpValue As Double) -> Void
UdbsInterface.TestDataInterface.CTestData_Result.ValueStored() -> Boolean
UdbsInterface.TestDataInterface.CTestData_Result.ValueStored(Value As Boolean) -> Void
UdbsInterface.TestDataInterface.CTestData_Utility
UdbsInterface.TestDataInterface.CTestData_Utility.GetPartIdentifier(OraclePN As String, ByRef ProductNumber As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.TestDataInterface.CTestData_Utility.IsUnitExist(ProductNumber As String, Release As Integer, SerialNumber As String) -> Boolean
UdbsInterface.TestDataInterface.CTestData_Utility.New() -> Void
UdbsInterface.TestDataInterface.InterfaceSupport
UdbsInterface.TestDataInterface.InterfaceSupport.IsSuccess(code As UdbsInterface.TestDataInterface.ResultCodes) -> Boolean
UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_ERROR = -1000000 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_FAIL = -30 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_FAIL_HI = -31 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_FAIL_INC = -1030 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_FAIL_LO = -32 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_NONE = 11 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_PASS = 10 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_PASS_INC = 1010 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_SANITY = -40 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_SANITY_HI = -41 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_SANITY_INC = -1040 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_SANITY_LO = -42 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_WARNING = -20 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_WARNING_HI = -21 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_WARNING_INC = -1020 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.ResultCodes.UDBS_SPECS_WARNING_LO = -22 -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.TestDataInterface.TestDataProcessInfo.IsProcessFromThisStation() -> Boolean
UdbsInterface.UDBSException
UdbsInterface.UDBSException.New() -> Void
UdbsInterface.UDBSException.New(errorMessage As String) -> Void
UdbsInterface.UDBSException.New(errorMessage As String, inner_exception As System.Exception) -> Void
UdbsInterface.UDBSException.New(inner_exception As System.Exception) -> Void
UdbsInterface.UdbsItemDoesNotExistException
UdbsInterface.UdbsItemDoesNotExistException.New(errorMessage As String, itemName As String) -> Void
UdbsInterface.UdbsItemDoesNotExistException.New(itemName As String) -> Void
UdbsInterface.UdbsItemListNotLoadedException
UdbsInterface.UdbsItemListNotLoadedException.New() -> Void
UdbsInterface.UdbsItemListNotLoadedException.New(errorMessage As String) -> Void
UdbsInterface.UdbsKittingException
UdbsInterface.UdbsKittingException.New(reason As String) -> Void
UdbsInterface.UdbsTestException
UdbsInterface.UdbsTestException.New(errorMessage As String) -> Void
UdbsInterface.UdbsTestException.New(errorMessage As String, errorCode As UdbsInterface.MasterInterface.ReturnCodes) -> Void
UdbsInterface.UdbsTestInProcessException
UdbsInterface.UdbsTestInProcessException.New(serialNo As String, partId As String, stationId As String, status As String) -> Void
UdbsInterface.UdbsTestNotLoadedException
UdbsInterface.UdbsTestNotLoadedException.New() -> Void
UdbsInterface.UdbsTestNotStartedException
UdbsInterface.UdbsTestNotStartedException.New() -> Void
UdbsInterface.UdbsTools
UdbsInterface.WipAccessException
UdbsInterface.WipAccessException.New() -> Void
UdbsInterface.WipCloseException
UdbsInterface.WipCloseException.New(returnCode As UdbsInterface.MasterInterface.ReturnCodes) -> Void
UdbsInterface.WipInProcessException
UdbsInterface.WipInProcessException.New(serialNumber As String, activeWipStep As String, startDate As Date) -> Void
UdbsInterface.WipInterface.CWIP_Item
UdbsInterface.WipInterface.CWIP_Item.Automated() -> Integer
UdbsInterface.WipInterface.CWIP_Item.BlobDataExists() -> Integer
UdbsInterface.WipInterface.CWIP_Item.Description() -> String
UdbsInterface.WipInterface.CWIP_Item.Descriptor() -> String
UdbsInterface.WipInterface.CWIP_Item.FailRouting() -> String
UdbsInterface.WipInterface.CWIP_Item.ID() -> Integer
UdbsInterface.WipInterface.CWIP_Item.Name() -> String
UdbsInterface.WipInterface.CWIP_Item.New(itemlistdef_id As Integer, itemlistdef_itemnumber As Integer, itemlistdef_itemname As String, itemlistdef_descriptor As String, itemlistdef_description As String, itemlistdef_required_step As Integer, itemlistdef_processname As String, itemlistdef_stagename As String, itemlistdef_role As String, itemlistdef_pass_routing As String, itemlistdef_fail_routing As String, itemlistdef_automated_process As Integer, itemlistdef_oracle_routing As Integer, itemlistdef_blobdata_exists As Integer) -> Void
UdbsInterface.WipInterface.CWIP_Item.Number() -> Integer
UdbsInterface.WipInterface.CWIP_Item.Oracle_Routing() -> Integer
UdbsInterface.WipInterface.CWIP_Item.PassRouting() -> String
UdbsInterface.WipInterface.CWIP_Item.ProcessName() -> String
UdbsInterface.WipInterface.CWIP_Item.RequiredStep() -> Integer
UdbsInterface.WipInterface.CWIP_Item.Role() -> String
UdbsInterface.WipInterface.CWIP_Item.StageName() -> String
UdbsInterface.WipInterface.CWIP_ItemList
UdbsInterface.WipInterface.CWIP_ItemList.BlobDataExists() -> Boolean
UdbsInterface.WipInterface.CWIP_ItemList.CreatedDate() -> Date
UdbsInterface.WipInterface.CWIP_ItemList.DebugMessage(ex As System.Exception) -> Void
UdbsInterface.WipInterface.CWIP_ItemList.Description() -> String
UdbsInterface.WipInterface.CWIP_ItemList.Dispose() -> Void
UdbsInterface.WipInterface.CWIP_ItemList.EmployeeNumber() -> String
UdbsInterface.WipInterface.CWIP_ItemList.Family() -> String
UdbsInterface.WipInterface.CWIP_ItemList.GetItemByNumber(ItemNumber As Integer) -> UdbsInterface.WipInterface.CWIP_Item
UdbsInterface.WipInterface.CWIP_ItemList.GetItemName(ItemNumber As Integer) -> String
UdbsInterface.WipInterface.CWIP_ItemList.ID() -> Integer
UdbsInterface.WipInterface.CWIP_ItemList.Items() -> System.Collections.Generic.Dictionary(Of String, UdbsInterface.WipInterface.CWIP_Item)
UdbsInterface.WipInterface.CWIP_ItemList.Loaded() -> Boolean
UdbsInterface.WipInterface.CWIP_ItemList.LoadItemList(ByRef ProductNumber As String, ByRef ProductRelease As Integer, ByRef Stage As String, ByRef Revision As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_ItemList.LoadItemListByID(ItemlistRevID As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_ItemList.New() -> Void
UdbsInterface.WipInterface.CWIP_ItemList.ProductID() -> Integer
UdbsInterface.WipInterface.CWIP_ItemList.ProductNumber() -> String
UdbsInterface.WipInterface.CWIP_ItemList.ProductRelease() -> Integer
UdbsInterface.WipInterface.CWIP_ItemList.Revision() -> Integer
UdbsInterface.WipInterface.CWIP_ItemList.Stage() -> String
UdbsInterface.WipInterface.CWIP_ItemList.UnitInfo() -> String
UdbsInterface.WipInterface.CWIP_Process
UdbsInterface.WipInterface.CWIP_Process.ActiveStep() -> String
UdbsInterface.WipInterface.CWIP_Process.AutoReRoute(StepName As String, RoutingType As String, UserName As String, Pwd As String = "") -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Process.Begin_Process(FamilyName As String, ProductNumber As String, SerialNumber As String, Stage As String, EmployeeNumber As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Process.DebugMessage(ex As System.Exception) -> Void
UdbsInterface.WipInterface.CWIP_Process.Dispose() -> Void
UdbsInterface.WipInterface.CWIP_Process.Family() -> String
UdbsInterface.WipInterface.CWIP_Process.Finish_Step(ByRef UDBSResult As Integer, WIPNote As String = "") -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Process.GetNextRecommendedStep(CurrentStep As String, CurrentResult As Integer, ByRef NextStep As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Process.ID() -> Integer
UdbsInterface.WipInterface.CWIP_Process.Itemlist() -> UdbsInterface.WipInterface.CWIP_ItemList
UdbsInterface.WipInterface.CWIP_Process.ItemlistRevID() -> Integer
UdbsInterface.WipInterface.CWIP_Process.ItemlistRevision() -> Integer
UdbsInterface.WipInterface.CWIP_Process.LoadActiveProcess(SerialNumber As String, LockStatus As UdbsInterface.WipInterface.LockStatus_Enum = UdbsInterface.WipInterface.LockStatus_Enum.READ_ONLY) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Process.LoadProcessByID(ProcessID As Integer, LockStatus As UdbsInterface.WipInterface.LockStatus_Enum = UdbsInterface.WipInterface.LockStatus_Enum.READ_ONLY) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Process.Locked() -> UdbsInterface.WipInterface.LockStatus_Enum
UdbsInterface.WipInterface.CWIP_Process.LockedBy() -> String
UdbsInterface.WipInterface.CWIP_Process.New() -> Void
UdbsInterface.WipInterface.CWIP_Process.ProductDescriptor() -> String
UdbsInterface.WipInterface.CWIP_Process.ProductID() -> Integer
UdbsInterface.WipInterface.CWIP_Process.ProductNumber() -> String
UdbsInterface.WipInterface.CWIP_Process.SerialNumber() -> String
UdbsInterface.WipInterface.CWIP_Process.Stage() -> String
UdbsInterface.WipInterface.CWIP_Process.Start_Step(EmployeeNumber As String, StationName As String, UDBSProcessID As Integer = -1) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Process.Status() -> String
UdbsInterface.WipInterface.CWIP_Process.Status(Value As String) -> Void
UdbsInterface.WipInterface.CWIP_Process.UnitID() -> Integer
UdbsInterface.WipInterface.CWIP_Process.Unlock_Process(UserName As String = "", Pwd As String = "") -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Process.WorkOrder() -> String
UdbsInterface.WipInterface.CWIP_Process.WorkOrder(Value As String) -> Void
UdbsInterface.WipInterface.CWIP_Result
UdbsInterface.WipInterface.CWIP_Result.ActiveDuration() -> Double
UdbsInterface.WipInterface.CWIP_Result.AuthorizedBy() -> String
UdbsInterface.WipInterface.CWIP_Result.BlobDataExists() -> Integer
UdbsInterface.WipInterface.CWIP_Result.EmployeeNumber() -> String
UdbsInterface.WipInterface.CWIP_Result.EndDate() -> Date
UdbsInterface.WipInterface.CWIP_Result.ID() -> Long
UdbsInterface.WipInterface.CWIP_Result.InactiveDuration() -> Double
UdbsInterface.WipInterface.CWIP_Result.Item() -> UdbsInterface.WipInterface.CWIP_Item
UdbsInterface.WipInterface.CWIP_Result.ItemlistDefID() -> Integer
UdbsInterface.WipInterface.CWIP_Result.Passflag() -> UdbsInterface.WipInterface.WIPResultCodes
UdbsInterface.WipInterface.CWIP_Result.ProcessID() -> Integer
UdbsInterface.WipInterface.CWIP_Result.StartDate() -> Date
UdbsInterface.WipInterface.CWIP_Result.Station() -> String
UdbsInterface.WipInterface.CWIP_Result.StepNumber() -> Integer
UdbsInterface.WipInterface.CWIP_Result.UDBSProcessID() -> Integer
UdbsInterface.WipInterface.CWIP_Result.WIPNotes() -> String
UdbsInterface.WipInterface.CWIP_Unit
UdbsInterface.WipInterface.CWIP_Unit.CreatedBy() -> String
UdbsInterface.WipInterface.CWIP_Unit.CreatedDate() -> Date
UdbsInterface.WipInterface.CWIP_Unit.CreationReport() -> String
UdbsInterface.WipInterface.CWIP_Unit.DebugMessage(ex As System.Exception) -> Void
UdbsInterface.WipInterface.CWIP_Unit.Dispose() -> Void
UdbsInterface.WipInterface.CWIP_Unit.FamilyName() -> String
UdbsInterface.WipInterface.CWIP_Unit.LoadActiveUnit(SerialNumber As String, ByRef ProcessID As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Unit.Loaded() -> Boolean
UdbsInterface.WipInterface.CWIP_Unit.LoadUnit(SerialNumber As String, Family As String = "", ProductNumber As String = "") -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.WipInterface.CWIP_Unit.New() -> Void
UdbsInterface.WipInterface.CWIP_Unit.ProductID() -> Integer
UdbsInterface.WipInterface.CWIP_Unit.ProductNumber() -> String
UdbsInterface.WipInterface.CWIP_Unit.ProductRelease() -> Integer
UdbsInterface.WipInterface.CWIP_Unit.SerialNumber() -> String
UdbsInterface.WipInterface.CWIP_Unit.UnitID() -> Integer
UdbsInterface.WipInterface.CWIP_Unit.UnloadUnit() -> Void
UdbsInterface.WipInterface.CWIP_Utility
UdbsInterface.WipInterface.CWIP_Utility.DebugMessage(ex As System.Exception) -> Void
UdbsInterface.WipInterface.CWIP_Utility.Dispose() -> Void
UdbsInterface.WipInterface.CWIP_Utility.GetUnitsInWip(udbsId As String, wipStep As String) -> System.Data.DataTable
UdbsInterface.WipInterface.CWIP_Utility.New() -> Void
UdbsInterface.WipInterface.CWIP_Utility.SoftwareReRoute(SerialNumber As String, stepName As String, note As String) -> Void
UdbsInterface.WipInterface.LockStatus_Enum
UdbsInterface.WipInterface.LockStatus_Enum.READ_ONLY = 0 -> UdbsInterface.WipInterface.LockStatus_Enum
UdbsInterface.WipInterface.LockStatus_Enum.READ_WRITE = 1 -> UdbsInterface.WipInterface.LockStatus_Enum
UdbsInterface.WipInterface.Support
UdbsInterface.WipInterface.Support.GetUDBSPartNumber(oraclePN As String) -> String
UdbsInterface.WipInterface.WIPResultCodes
UdbsInterface.WipInterface.WIPResultCodes.WIP_ERROR = -1000000 -> UdbsInterface.WipInterface.WIPResultCodes
UdbsInterface.WipInterface.WIPResultCodes.WIP_FAIL = -30 -> UdbsInterface.WipInterface.WIPResultCodes
UdbsInterface.WipInterface.WIPResultCodes.WIP_INCOMPLETE = -10 -> UdbsInterface.WipInterface.WIPResultCodes
UdbsInterface.WipInterface.WIPResultCodes.WIP_PASS = 10 -> UdbsInterface.WipInterface.WIPResultCodes
UdbsInterface.WipInterface.WIPResultCodes.WIP_SKIP = 5 -> UdbsInterface.WipInterface.WIPResultCodes
UdbsInterface.WipLoadProcessException
UdbsInterface.WipLoadProcessException.New(serialNumber As String, wipProcessID As Integer) -> Void
UdbsInterface.WipLockedException
UdbsInterface.WipLockedException.New(serialNumber As String, lockedBy As String) -> Void
UdbsInterface.WipReworkException
UdbsInterface.WipReworkException.New(serialNumber As String, requiredWipStep As String, activeWipStep As String) -> Void
UdbsInterface.WipRoutingException
UdbsInterface.WipRoutingException.New(serialNumber As String, requiredWipStep As String, activeWipStep As String) -> Void
UdbsInterface.WipSNNotActiveException
UdbsInterface.WipSNNotActiveException.New(serialNumber As String) -> Void
UdbsInterface.WipSNNotFoundException
UdbsInterface.WipSNNotFoundException.New(serialNumber As String) -> Void
UdbsInterface.WipStartException
UdbsInterface.WipStartException.New() -> Void
UdbsInterface.WipStartException.New(returnCode As UdbsInterface.MasterInterface.ReturnCodes) -> Void
MustOverride UdbsInterface.MasterInterface.ProcessInfo.Load(ByRef resultTable As System.Data.DataTable) -> Void
Shared Overloads UdbsInterface.KittingInterface.KittingProcessInfo.GetSequenceCount(productNumber As String, serialNumber As String, stage As String) -> Integer
Shared Overloads UdbsInterface.TestDataInterface.TestDataProcessInfo.GetSequenceCount(productNumber As String, serialNumber As String, stage As String) -> Integer
Shared Overloads UdbsInterface.WipInterface.WIPprocessInfo.GetSequenceCount(productNumber As String, serialNumber As String, stage As String) -> Integer
Shared UdbsInterface.KittingInterface.KittingProcessInfo.GetProcessInfo(productNumber As String, serialNumber As String, stage As String, sequence As Integer = 0) -> UdbsInterface.KittingInterface.KittingProcessInfo
Shared UdbsInterface.MasterInterface.CProcessInstance.GetProcessStatusEnum(status As String) -> UdbsInterface.MasterInterface.UdbsProcessStatus
Shared UdbsInterface.MasterInterface.CProcessInstance.GetProcessStatusLabel(processStatus As UdbsInterface.MasterInterface.UdbsProcessStatus) -> String
Shared UdbsInterface.MasterInterface.CProduct.UnitExists(SerialNumber As String, productNumber As String) -> Boolean
Shared UdbsInterface.MasterInterface.ProcessInfo.GetProcessID(productNumber As String, serialNumber As String, stage As String, processType As UdbsInterface.MasterInterface.ProcessInfo.ProcessTypes, sequence As Integer = 0) -> Integer
Shared UdbsInterface.MasterInterface.ProcessInfo.GetSequenceCount(productNumber As String, serialNumber As String, stage As String, processType As UdbsInterface.MasterInterface.ProcessInfo.ProcessTypes) -> Integer
Shared UdbsInterface.TestDataInterface.TestDataProcessInfo.GetProcessInfo(productNumber As String, serialNumber As String, stage As String, sequence As Integer = 0) -> UdbsInterface.TestDataInterface.TestDataProcessInfo
Shared UdbsInterface.WipInterface.WIPprocessInfo.GetProcessInfo(productNumber As String, serialNumber As String, stage As String, sequence As Integer = 0) -> UdbsInterface.WipInterface.WIPprocessInfo
UdbsInterface.KittingInterface.KittingProcessInfo
UdbsInterface.KittingInterface.KittingProcessInfo.WorkOrder() -> String
UdbsInterface.MasterInterface.clsPrdGrp
UdbsInterface.MasterInterface.clsPrdGrp.CreateBlockMACAddress(product_number As String, product_group As String, serial_number As String, MAC_identifier As String, ByRef increment As Integer, ByRef new_address As Boolean, ByRef MACAddress As String, ByRef allMACAddresses As String) -> Boolean
UdbsInterface.MasterInterface.clsPrdGrp.CreateMACAddress(product_number As String, product_group As String, serial_number As String, MAC_identifier As String, ByRef new_address As Boolean, ByRef MACAddress As String) -> Boolean
UdbsInterface.MasterInterface.clsPrdGrp.GetNextSNSequence(product_number As String, product_group As String, ByRef SN_Sequence As Integer) -> Boolean
UdbsInterface.MasterInterface.clsPrdGrp.GetUnitVariance(product_number As String, unit_SN As String, ByRef UnitVariance As Integer) -> Boolean
UdbsInterface.MasterInterface.clsPrdGrp.New() -> Void
UdbsInterface.MasterInterface.clsPrdGrp.ProductGroupDetailsList(product_group As String, ByRef rsPrdGrpdetails As System.Data.DataTable) -> Boolean
UdbsInterface.MasterInterface.clsPrdGrp.ProductGroupList_fromPrdGrp(product_group As String, ByRef rsPrdGrpList As System.Data.DataTable) -> Boolean
UdbsInterface.MasterInterface.clsPrdGrp.ProductGroupList_fromPrdNum(product_number As String, ByRef rsPrdGrpList As System.Data.DataTable) -> Boolean
UdbsInterface.MasterInterface.clsPrdGrp.ReadMACAddresses(product_number As String, product_group As String, serial_number As String) -> System.Collections.Generic.Dictionary(Of String, String)
UdbsInterface.MasterInterface.CProcessInstance.SoftwareVersion() -> String
UdbsInterface.MasterInterface.CProcessInstance.UnitID() -> Integer
UdbsInterface.MasterInterface.ProcessInfo
UdbsInterface.MasterInterface.ProcessInfo.ActiveDuration() -> Double
UdbsInterface.MasterInterface.ProcessInfo.Employee() -> String
UdbsInterface.MasterInterface.ProcessInfo.EndDate() -> Date
UdbsInterface.MasterInterface.ProcessInfo.ItemListRevisionID() -> Integer
UdbsInterface.MasterInterface.ProcessInfo.New(serialNumber As String, udbsProductID As String, stage As String) -> Void
UdbsInterface.MasterInterface.ProcessInfo.Notes() -> String
UdbsInterface.MasterInterface.ProcessInfo.ProcessID() -> Integer
UdbsInterface.MasterInterface.ProcessInfo.ProcessTypes
UdbsInterface.MasterInterface.ProcessInfo.ProcessTypes.kitting = 2 -> UdbsInterface.MasterInterface.ProcessInfo.ProcessTypes
UdbsInterface.MasterInterface.ProcessInfo.ProcessTypes.testdata = 0 -> UdbsInterface.MasterInterface.ProcessInfo.ProcessTypes
UdbsInterface.MasterInterface.ProcessInfo.ProcessTypes.wip = 1 -> UdbsInterface.MasterInterface.ProcessInfo.ProcessTypes
UdbsInterface.MasterInterface.ProcessInfo.Result() -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.MasterInterface.ProcessInfo.Sequence() -> Integer
UdbsInterface.MasterInterface.ProcessInfo.StartDate() -> Date
UdbsInterface.MasterInterface.ProcessInfo.Status() -> UdbsInterface.MasterInterface.UdbsProcessStatus
UdbsInterface.MasterInterface.ProcessInfo.TotalDuration() -> Double
UdbsInterface.MasterInterface.ProcessInfo.UnitID() -> Integer
UdbsInterface.MasterInterface.ProcessInfo._activeDuration -> Double
UdbsInterface.MasterInterface.ProcessInfo._employee -> String
UdbsInterface.MasterInterface.ProcessInfo._endDate -> Date
UdbsInterface.MasterInterface.ProcessInfo._itemListRevisionID -> Integer
UdbsInterface.MasterInterface.ProcessInfo._notes -> String
UdbsInterface.MasterInterface.ProcessInfo._processID -> Integer
UdbsInterface.MasterInterface.ProcessInfo._result -> UdbsInterface.TestDataInterface.ResultCodes
UdbsInterface.MasterInterface.ProcessInfo._sequence -> Integer
UdbsInterface.MasterInterface.ProcessInfo._serialNumber -> String
UdbsInterface.MasterInterface.ProcessInfo._stage -> String
UdbsInterface.MasterInterface.ProcessInfo._startDate -> Date
UdbsInterface.MasterInterface.ProcessInfo._status -> UdbsInterface.MasterInterface.UdbsProcessStatus
UdbsInterface.MasterInterface.ProcessInfo._totalDuration -> Double
UdbsInterface.MasterInterface.ProcessInfo._ubdsProductID -> String
UdbsInterface.MasterInterface.ProcessInfo._unitID -> Integer
UdbsInterface.MasterInterface.UdbsProcessStatus
UdbsInterface.MasterInterface.UdbsProcessStatus.COMPLETED = 4 -> UdbsInterface.MasterInterface.UdbsProcessStatus
UdbsInterface.MasterInterface.UdbsProcessStatus.IN_PROCESS = 1 -> UdbsInterface.MasterInterface.UdbsProcessStatus
UdbsInterface.MasterInterface.UdbsProcessStatus.PAUSED = 2 -> UdbsInterface.MasterInterface.UdbsProcessStatus
UdbsInterface.MasterInterface.UdbsProcessStatus.STARTING = 0 -> UdbsInterface.MasterInterface.UdbsProcessStatus
UdbsInterface.MasterInterface.UdbsProcessStatus.TERMINATED = 3 -> UdbsInterface.MasterInterface.UdbsProcessStatus
UdbsInterface.MasterInterface.UdbsProcessStatus.UNKNOWN = 5 -> UdbsInterface.MasterInterface.UdbsProcessStatus
UdbsInterface.TestDataInterface.TestDataProcessInfo
UdbsInterface.TestDataInterface.TestDataProcessInfo.ArchiveDate() -> Date
UdbsInterface.TestDataInterface.TestDataProcessInfo.ArchiveState() -> Byte
UdbsInterface.TestDataInterface.TestDataProcessInfo.BlobDataExists() -> Byte
UdbsInterface.TestDataInterface.TestDataProcessInfo.FullTestNumber() -> Byte
UdbsInterface.TestDataInterface.TestDataProcessInfo.SoftwareVersion() -> String
UdbsInterface.TestDataInterface.TestDataProcessInfo.Station() -> String
UdbsInterface.WipInterface.CWIP_Process.ActiveDuration() -> Double
UdbsInterface.WipInterface.CWIP_Process.ActiveDuration(Value As Double) -> Void
UdbsInterface.WipInterface.CWIP_Process.EmployeeNumber() -> String
UdbsInterface.WipInterface.CWIP_Process.EmployeeNumber(Value As String) -> Void
UdbsInterface.WipInterface.CWIP_Process.EndDate() -> Date
UdbsInterface.WipInterface.CWIP_Process.EndDate(Value As Date) -> Void
UdbsInterface.WipInterface.CWIP_Process.ExcursionCount() -> Integer
UdbsInterface.WipInterface.CWIP_Process.ExcursionCount(Value As Integer) -> Void
UdbsInterface.WipInterface.CWIP_Process.Notes() -> String
UdbsInterface.WipInterface.CWIP_Process.Notes(Value As String) -> Void
UdbsInterface.WipInterface.CWIP_Process.Result() -> Integer
UdbsInterface.WipInterface.CWIP_Process.Result(Value As Integer) -> Void
UdbsInterface.WipInterface.CWIP_Process.Results() -> System.Collections.Generic.Dictionary(Of Integer, UdbsInterface.WipInterface.CWIP_Result)
UdbsInterface.WipInterface.CWIP_Process.StartDate() -> Date
UdbsInterface.WipInterface.CWIP_Process.StartDate(Value As Date) -> Void
UdbsInterface.WipInterface.CWIP_Process.TotalDuration() -> Double
UdbsInterface.WipInterface.CWIP_Process.TotalDuration(Value As Double) -> Void
UdbsInterface.WipInterface.CWIP_Process.TrackingNumber() -> String
UdbsInterface.WipInterface.CWIP_Process.TrackingNumber(Value As String) -> Void
UdbsInterface.WipInterface.CWIP_Process.UnitInfo() -> String
UdbsInterface.WipInterface.CWIP_Process.UnitInfo(Value As String) -> Void
UdbsInterface.WipInterface.WIPprocessInfo
UdbsInterface.WipInterface.WIPprocessInfo.ActiveStep() -> String
UdbsInterface.WipInterface.WIPprocessInfo.BlobDataExists() -> Integer
UdbsInterface.WipInterface.WIPprocessInfo.ExcursionCount() -> Integer
UdbsInterface.WipInterface.WIPprocessInfo.LockedBy() -> String
UdbsInterface.WipInterface.WIPprocessInfo.TrackingNumber() -> String
UdbsInterface.WipInterface.WIPprocessInfo.UnitInfo() -> String
UdbsInterface.WipInterface.WIPprocessInfo.WorkOrder() -> String
UdbsInterface.TestDataInterface.CTestData_Result.Clear() -> UdbsInterface.MasterInterface.ReturnCodes
Const UdbsInterface.MasterInterface.CBLOB.FileType = 1000 -> Integer
Overridable UdbsInterface.MasterInterface.CBLOB.Dispose(disposing As Boolean) -> Void
Shared UdbsInterface.MasterInterface.CBLOB.DetermineArrayTypeCode(anArray As System.Array) -> Integer
Shared UdbsInterface.MasterInterface.CBLOB.GetLocalBlobCount(processName As String, processId As Integer, ByRef blobCount As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
Shared UdbsInterface.MasterInterface.CBLOB.GetLocalBlobSize(processName As String, processId As Integer, ByRef blobCount As Integer, ByRef totalCompressedSize As Long, ByRef totalUncompressedSize As Long) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CBLOB
UdbsInterface.MasterInterface.CBLOB.Dispose() -> Void
UdbsInterface.MasterInterface.CBLOB.GetAttachmentList(ProcessName As String, LinkToTable As String, LinkToID As Long, ByRef ArrayNames As String(), ByRef ArrayDataType As Integer()) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CBLOB.GetBLOB(ProcessName As String, LinkToTable As String, LinkToID As Long, ArrayName As String, ByRef DataGroupName As String, ByRef NumElements As Integer, ByRef dataType As Microsoft.VisualBasic.VariantType, ByRef IsHeader As Boolean, ByRef ArrayData As System.Array, FileName As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CBLOB.GetBLOB_Local(ProcessName As String, ItemName As String, ProcessId As Long, ArrayName As String, ByRef DataGroupName As String, ByRef NumElements As Integer, ByRef dataType As Microsoft.VisualBasic.VariantType, ByRef IsHeader As Boolean, ByRef ArrayData As System.Array, FileName As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CBLOB.MaxFileSize() -> Integer
UdbsInterface.MasterInterface.CBLOB.MaxFileSize(AutoPropertyValue As Integer) -> Void
UdbsInterface.MasterInterface.CBLOB.New() -> Void
UdbsInterface.MasterInterface.CBLOB.RemoveLocalBLOB(ProcessID As Integer, Itemname As String, ArrayName As String) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CBLOB.StoreBLOB(ProcessName As String, LinkToTable As String, LinkToID As Long, ArrayName As String, DataGroupName As String, IsHeader As Boolean, ArrayData As System.Array, FileName As String, lowBound As Integer, upBound As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CBLOB.StoreBLOB_Local(ProcessID As Integer, Itemname As String, ArrayName As String, DataGroupName As String, IsHeader As Boolean, ArrayData As System.Array, FileName As String, lowBound As Integer, upBound As Integer) -> UdbsInterface.MasterInterface.ReturnCodes
UdbsInterface.MasterInterface.CProcessInstance.DeleteFilesAttachedToUDBS() -> Void
UdbsInterface.MasterInterface.CProcessInstance.dProductCreatedDate() -> Date
UdbsInterface.MasterInterface.CProcessInstance.FilesAttachedtoUDBS() -> System.Collections.Generic.List(Of String)
UdbsInterface.MasterInterface.CProcessInstance._filesAttachedToUDBS -> System.Collections.Generic.List(Of String)
UdbsInterface.TestDataInterface.CTestdata_Instance.StoreFile(resultItem As String, fileName As String, dataGroupName As String, isHeader As Boolean, filePath As String) -> UdbsInterface.MasterInterface.ReturnCodes
Shared Overloads UdbsInterface.TestDataInterface.TestDataProcessInfo.GetProcessInfo(productNumber As String, serialNumber As String, stage As String, sequence As Integer = 0, processID As Integer? = Nothing) -> UdbsInterface.TestDataInterface.TestDataProcessInfo
Shared Overloads UdbsInterface.TestDataInterface.TestDataProcessInfo.GetProcessInfo(productNumber As String, serialNumber As String, stage As String, sequence As Integer = 0) -> UdbsInterface.TestDataInterface.TestDataProcessInfo
Shared Overloads UdbsInterface.TestDataInterface.TestDataProcessInfo.GetProcessInfo(productNumber As String, serialNumber As String, stage As String, sequence As Integer, processID As Integer) -> UdbsInterface.TestDataInterface.TestDataProcessInfo
Shared Overloads UdbsInterface.TestDataInterface.TestDataProcessInfo.GetProcessInfo(productNumber As String, serialNumber As String, stage As String, sequence As Integer = 0) -> UdbsInterface.TestDataInterface.TestDataProcessInfo
Shared Overloads UdbsInterface.TestDataInterface.TestDataProcessInfo.GetProcessInfo(productNumber As String, serialNumber As String, stage As String, sequence As Integer, processID As Integer) -> UdbsInterface.TestDataInterface.TestDataProcessInfo